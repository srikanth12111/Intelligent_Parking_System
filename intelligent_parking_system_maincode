`timescale 1ns / 1ps 
module intelligent_parking_system ( 
input clk, reset,            
      //
 Clock and Reset 
input entry_request, exit_request,  // Entry and Exit requests 
input [3:0] slot_sensors,           // Sensors: 1 = occupied, 0 = free 
output reg entry_gate, exit_gate,   // Gate control signals 
output reg [3:0] available_slots    // Number of available slots 
); 
integer i;  
always @(posedge clk or posedge reset) begin 
if (reset) begin 
available_slots <= 4;  // Assuming 4 parking slots, all available at reset 
entry_gate <= 0; 
exit_gate <= 0; 
end else begin 
// Count available slots 
available_slots = 0; 
for (i = 0; i < 4; i = i + 1) begin 
if (slot_sensors[i] == 0)  // If slot is free 
available_slots = available_slots + 1; 
end  
 
            // Entry Control 
            if (entry_request && available_slots > 0) begin 
                entry_gate <= 1; // Open entry gate 
            end else begin 
                entry_gate <= 0; 
            end 
             
            // Exit Control 
            if (exit_request) begin 
                exit_gate <= 1; // Open exit gate 
            end else begin 
                exit_gate <= 0; 
            end 
        end 
    end 
endmodule
